# Generated by Django 4.2.4 on 2023-11-04 01:56

import Website.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre de la categoría', max_length=100, unique=True, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingresar descripción de la categoría', null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Categoría de insumo',
                'verbose_name_plural': 'Categorías de insumos',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Comune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre de la comuna', max_length=100, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Comuna de Chile',
                'verbose_name_plural': 'Comunas de Chile',
                'db_table': 'comunes',
            },
        ),
        migrations.CreateModel(
            name='FireStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre de la estación', max_length=100, unique=True, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingrese una descripción de la estación', null=True, verbose_name='Descripción')),
                ('address', models.CharField(help_text='Ingrese la dirección (calle y número) de la estación', max_length=100, verbose_name='Dirección')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Fecha de creación')),
                ('comunes', models.ForeignKey(help_text='Seleccione la comuna correspondiente', on_delete=django.db.models.deletion.DO_NOTHING, to='Website.comune', verbose_name='Comuna')),
            ],
            options={
                'verbose_name': 'Estación de bomberos',
                'verbose_name_plural': 'Estaciones de bomberos',
                'db_table': 'fire_stations',
            },
        ),
        migrations.CreateModel(
            name='FireTruck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese un nombre de fantasía para el vehículo', max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingrese una descripción para el vehículo', null=True, verbose_name='Descripción')),
                ('plate', models.CharField(help_text='Ingrese el número de patente del vehículo', max_length=15, unique=True, verbose_name='Patente')),
                ('model', models.CharField(blank=True, help_text='(Opcional) Ingrese el modelo del vehículo', max_length=50, null=True, verbose_name='Modelo')),
                ('vin', models.CharField(blank=True, help_text='(Opcional) Ingrese el número de chasis del vehículo', max_length=50, null=True, unique=True, verbose_name='Chasis')),
                ('year', models.IntegerField(blank=True, help_text='(Opcional) Ingrese el año de fabricación del vehículo', null=True, verbose_name='Año')),
                ('image', models.ImageField(blank=True, default='default.png', help_text='(Opcional) Subir imagen del vehículo', null=True, unique=True, upload_to='firetrucks', verbose_name='Imagen')),
                ('create_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de creación')),
                ('fire_stations', models.ForeignKey(help_text='Seleccionar bomba/estación', on_delete=django.db.models.deletion.DO_NOTHING, to='Website.firestation', verbose_name='Estación de bomberos')),
            ],
            options={
                'verbose_name': 'Vehículo Bomberil',
                'verbose_name_plural': 'Vehículos Bomberiles',
                'db_table': 'fire_trucks',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Código de barras')),
                ('expire_at', models.DateField(blank=True, help_text='(Opcional) Indicar fecha de expiración si corresponde', null=True, verbose_name='Fecha de Vencimiento')),
                ('expire_notification', models.IntegerField(blank=True, help_text='(Opcional) Indicar con cuántos días de anticipación se desea recibir un aviso de caducidad próxima', null=True, verbose_name='Notificación de caducidad')),
                ('maintenance_hour', models.IntegerField(blank=True, help_text='(Opcional) Indicar cada cuántas horas de uso se debe hacer mantenimiento', null=True, verbose_name='Horas de uso para mantenimiento')),
                ('usage_hours', models.IntegerField(default=0, help_text='(Opcional) Horas de uso reseteables', verbose_name='Horas de uso')),
                ('total_usage_hours', models.IntegerField(default=0, help_text='(Opcional) Horas de uso totales. Por defecto es cero', verbose_name='Horas de uso totales')),
                ('last_maintenance', models.DateField(blank=True, null=True, verbose_name='Última mantención')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Fecha de creación')),
                ('categories', models.ForeignKey(help_text='Seleccionar categoría', on_delete=django.db.models.deletion.DO_NOTHING, to='Website.category', verbose_name='Categoría')),
                ('compartments', models.ForeignKey(help_text='Seleccionar en qué gabeta está ubicado', on_delete=django.db.models.deletion.CASCADE, to='Website.firetruck', verbose_name='Gabeta/compartimento')),
                ('container', models.ForeignKey(blank=True, help_text='(Opcional) Si el insumo está contenido dentro de otro insumo, indicarlo aquí', null=True, on_delete=django.db.models.deletion.CASCADE, to='Website.inventory', verbose_name='Insumo contenedor')),
            ],
            options={
                'verbose_name': 'Insumo',
                'verbose_name_plural': 'Insumos',
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre del rol', max_length=100, unique=True, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingrese una descripción del rol', null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Perfil de usuario',
                'verbose_name_plural': 'Perfiles de usuario',
                'db_table': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre de la región', max_length=100, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Región de Chile',
                'verbose_name_plural': 'Regiones de Chile',
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre del estado', max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingrese una descripción del estado', null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'db_table': 'status',
            },
        ),
        migrations.CreateModel(
            name='TypeFireTruck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre del tipo de vehículo', max_length=50, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingrese una descripción del tipo de vehículo', null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Tipo de vehículo bomberil',
                'verbose_name_plural': 'Tipos de vehículos bomberiles',
                'db_table': 'type_fire_trucks',
            },
        ),
        migrations.CreateModel(
            name='UserMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(help_text='Ingresar número de teléfono', max_length=15, verbose_name='Teléfono')),
                ('fire_stations', models.ForeignKey(help_text='Seleccione la estación correspondiente', on_delete=django.db.models.deletion.DO_NOTHING, to='Website.firestation', verbose_name='Estación de bomberos')),
                ('profiles', models.ForeignKey(help_text='Ingrese el rol del usuario', on_delete=django.db.models.deletion.DO_NOTHING, to='Website.profile', verbose_name='Rol de usuario')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ID Usuario')),
            ],
            options={
                'verbose_name': 'Metadata de usuario',
                'verbose_name_plural': 'Metadatos de usuarios',
                'db_table': 'user_metadata',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese un título para facilitar la identificación del programa', max_length=100, verbose_name='Nombre')),
                ('day', models.IntegerField(help_text='Establecer día del mes para efectuar la mantención. Seleccione entre 1 y 30', validators=[Website.validators.validate_month_day], verbose_name='Día del mes')),
                ('frequency', models.IntegerField(default=30, help_text='Indicar la frecuencia de mantención (días)', verbose_name='Mantenimiento cada (días)')),
                ('notification', models.IntegerField(default=1, help_text='Indicar con cuantos días de anticipación notificar', verbose_name='Notificación anticipada (días)')),
                ('user', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Programa de mantenimiento',
                'verbose_name_plural': 'Programas de mantenimiento',
                'db_table': 'maintenance_program',
            },
        ),
        migrations.CreateModel(
            name='LendingItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.CharField(help_text='A quién se le prestó el insumo', max_length=100, verbose_name='Persona / Entidad')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingresar descripción del insumo', null=True, verbose_name='Descripción')),
                ('create_date', models.DateTimeField(auto_now=True, verbose_name='Fecha')),
                ('inventory', models.ForeignKey(help_text='Insumo prestado', on_delete=django.db.models.deletion.CASCADE, to='Website.inventory', verbose_name='Insumo')),
            ],
            options={
                'verbose_name': 'Préstamo',
                'verbose_name_plural': 'Préstamos de insumos',
                'db_table': 'lending_items',
            },
        ),
        migrations.CreateModel(
            name='InventoryMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre de fantasía del insumo. Puede ser su nombre comercial', max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingresar descripción del insumo', null=True, verbose_name='Descripción')),
                ('price', models.IntegerField(blank=True, help_text='(Opcional) Ingresar valor comercial del insumo', null=True, verbose_name='Precio')),
                ('brand', models.CharField(blank=True, help_text='(Opcional) Ingresar marca del insumo', max_length=50, null=True, verbose_name='Marca')),
                ('model', models.CharField(blank=True, help_text='(Opcional) Ingresar modelo del insumo', max_length=50, null=True, verbose_name='Modelo')),
                ('image', models.ImageField(blank=True, default='default.png', help_text='(Opcional) Subir imagen del insumo', null=True, unique=True, upload_to='inventory', verbose_name='Imagen')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Fecha de creación')),
                ('Inventory', models.OneToOneField(help_text='Seleccionar insumo correspondiente', on_delete=django.db.models.deletion.CASCADE, to='Website.inventory', verbose_name='Insumo')),
            ],
            options={
                'verbose_name': 'Insumo - Metadata',
                'verbose_name_plural': 'Insumos - Metadata',
                'db_table': 'inventory_metadata',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='maintenance_programs',
            field=models.ForeignKey(blank=True, help_text='(Opcional) Indicar programa de mantención si corresponde', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Website.maintenanceprogram', verbose_name='Programa de mantenimiento'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='status',
            field=models.ForeignKey(help_text='Definir estado del insumo', on_delete=django.db.models.deletion.DO_NOTHING, to='Website.status', verbose_name='Estado'),
        ),
        migrations.AddField(
            model_name='firetruck',
            name='type_fire_trucks',
            field=models.ForeignKey(help_text='Seleccionar tipo de vehículo', on_delete=django.db.models.deletion.DO_NOTHING, to='Website.typefiretruck', verbose_name='Tipo de vehículo'),
        ),
        migrations.CreateModel(
            name='FireOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_at', models.DateTimeField(editable=False, verbose_name='Hora de inicio')),
                ('end_at', models.DateTimeField(editable=False, verbose_name='Hora de término')),
                ('fire_trucks', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to='Website.firetruck', verbose_name='Vehículo')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='ID de usuario')),
            ],
            options={
                'verbose_name': 'Operación',
                'verbose_name_plural': 'Operaciones',
                'db_table': 'fire_operation',
            },
        ),
        migrations.AddField(
            model_name='comune',
            name='regions',
            field=models.ForeignKey(help_text='Seleccione la región correspondiente', on_delete=django.db.models.deletion.CASCADE, to='Website.region', verbose_name='Región'),
        ),
        migrations.CreateModel(
            name='Compartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre de la gaveta/compartimento', max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='(Opcional) Ingresar descripción para la gaveta/compartimento', null=True, verbose_name='Descripción')),
                ('quantity', models.IntegerField(blank=True, help_text='(Opcional) Aquí se establece la cantidad esperada de insumos del compartimento. Puede definirse después', null=True, verbose_name='Cantidad')),
                ('fire_trucks', models.ForeignKey(help_text='Seleccionar vehículo bomberil correspondiente', on_delete=django.db.models.deletion.CASCADE, to='Website.firetruck', verbose_name='Vehículo')),
            ],
            options={
                'verbose_name': 'Gaveta de almacenamiento',
                'verbose_name_plural': 'Gavetas de almacenamiento',
                'db_table': 'compartments',
            },
        ),
    ]
